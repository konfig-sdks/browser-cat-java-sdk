/*
 * BrowserCat API
 * Providing purr-fect headless browser access via utility endpoints and direct websocket connections.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@browsercat.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.OpenApiGetSpecJsonResponse;
import com.konfigthis.client.model.OpenApiGetYamlSpecResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OpenApiApi
 */
@Disabled
public class OpenApiApiTest {

    private static OpenApiApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new OpenApiApi(apiClient);
    }

    /**
     * Open OpenAPI docs
     *
     * Open OpenAPI docs explorer. Easily explore functionality, request formats, and response types.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exploreFunctionalityTest() throws ApiException {
        String response = api.exploreFunctionality()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve API spec as JSON
     *
     * Retrieve API spec in JSON format. Use this format to generate types, clients, and mocks in your language of choice.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecJsonTest() throws ApiException {
        OpenApiGetSpecJsonResponse response = api.getSpecJson()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve API spec as YAML
     *
     * Retrieve API spec in YAML format. Use this format to generate types, clients, and mocks in your language of choice.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getYamlSpecTest() throws ApiException {
        OpenApiGetYamlSpecResponse response = api.getYamlSpec()
                .execute();
        // TODO: test validations
    }

}

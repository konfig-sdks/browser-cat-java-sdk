/*
 * BrowserCat API
 * Providing purr-fect headless browser access via utility endpoints and direct websocket connections.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@browsercat.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.io.File;
import com.konfigthis.client.model.Invoice;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.Subscription;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BillingApi
 */
@Disabled
public class BillingApiTest {

    private static BillingApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BillingApi(apiClient);
    }

    /**
     * Get active subscription
     *
     * Get the primary, active subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getActiveSubscriptionTest() throws ApiException {
        Subscription response = api.getActiveSubscription()
                .execute();
        // TODO: test validations
    }

    /**
     * Get PDF receipt for specific invoice
     *
     * Get specific invoice PDF.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInvoicePdfTest() throws ApiException {
        String invId = null;
        File response = api.getInvoicePdf(invId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get specific invoice
     *
     * Get specific invoice info.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificInvoiceTest() throws ApiException {
        String invId = null;
        Invoice response = api.getSpecificInvoice(invId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get specific subscription
     *
     * Get specific subscription details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificSubscriptionTest() throws ApiException {
        String subId = null;
        Subscription response = api.getSpecificSubscription(subId)
                .execute();
        // TODO: test validations
    }

    /**
     * List invoices within range
     *
     * List all invoices (including failed and refunds) within a given time range.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listInvoicesRangeTest() throws ApiException {
        Integer limit = null;
        Object offset = null;
        OffsetDateTime afterDate = null;
        OffsetDateTime beforeDate = null;
        List<Invoice> response = api.listInvoicesRange()
                .limit(limit)
                .offset(offset)
                .afterDate(afterDate)
                .beforeDate(beforeDate)
                .execute();
        // TODO: test validations
    }

    /**
     * List subscriptions within range
     *
     * List all current and previous subscriptions within a given time range.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSubscriptionsWithinRangeTest() throws ApiException {
        Integer limit = null;
        Object offset = null;
        OffsetDateTime afterDate = null;
        OffsetDateTime beforeDate = null;
        List<Subscription> response = api.listSubscriptionsWithinRange()
                .limit(limit)
                .offset(offset)
                .afterDate(afterDate)
                .beforeDate(beforeDate)
                .execute();
        // TODO: test validations
    }

}
